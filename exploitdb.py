#!/usr/bin/python
from ip_renew import *
from bs4 import BeautifulSoup
import re
from py2neo import authenticate, Graph, Path, Node, Relationship

import requests



user_agent = 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.7) Gecko/2009021910 Firefox/3.0.7'
headers={'User-Agent':user_agent}
#authenticate("localhost:9066", "neo4j","password")
#graph = Graph("http://localhost:7474/db/data")

#website = "Oday-test"
#website_node = Node("Website", name=website)
#graph.create(website_node)

#website = "Oday-test"
#website_node = Node("Website", name=website)
#graph.create(website_node)
#renew_connection()
url = "https://www.exploit-db.com/author/?a="
authornodes = {}
for i in range(1,2):
	authortopics = {}
	print "Author "+str(i)
	forum = requests.get(url + str(i),headers=headers)
	#print forum.text
	soup = BeautifulSoup(forum.text,'lxml')
	#print soup
	####For author name######
	authortopic = soup.find_all('table',class_='exploit_list bootstrap-wrapper')
	#print authortopics

	authortopictable = BeautifulSoup("<html>"+str(authortopic[0])+"</html>","lxml")
	topictbody = authortopictable.find_all("tbody")
	topics = BeautifulSoup("<html>"+str(topictbody[0])+"</html>","lxml")
	for row in topics.find_all("tr"):
		rowsoup = BeautifulSoup("<html>"+str(row)+"</html>","lxml")
		date = rowsoup.find_all("td",class_="date")[0].string
		nametags = rowsoup.find_all("td",class_="description")[0]
		topicnamesoup = BeautifulSoup("<html>"+str(nametags)+"</html>","lxml")
		topicname = topicnamesoup.find_all('a')[0]

		platformtags = rowsoup.find_all("td",class_="platform")[0]
		platformsoup = BeautifulSoup("<html>"+str(platformtags)+"</html>","lxml")
		platformname = platformsoup.find_all('a')[0]

		print date
		print topicname.string
		print str(platformname.string).strip()
		temp = {topicname.string:platformname.string.strip()}
		authortopics.update(temp)
		print "****************"
	temp1 = {soup.head.title.string:authortopics}
	authornodes.update(temp1)

for key in authornodes.keys():
	temp = authornodes.get(key)
	print "Author :" + str(key)
	for name in temp.keys():
		print "Topic name:"+ str(name)
		print "Platform:" + str(temp.get(name))